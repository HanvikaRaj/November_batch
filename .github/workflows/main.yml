name: Maven Build and Security Scan

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull request to the main branch

jobs:
  maven-build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    strategy:
      matrix:
        step: [verify, compile, test, package]  # Define the stages as a matrix to run them in parallel

    container:
      image: maven:3.6.3  # Use Maven 3.6.3 Docker image for the job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # Set the Java version as needed

      - name: Run ${{ matrix.step }} stage
        run: mvn ${{ matrix.step }}

      - name: Collect Checkstyle results for ${{ matrix.step }}
        if: ${{ matrix.step == 'verify' || matrix.step == 'compile' || matrix.step == 'test' || matrix.step == 'package' }}
        run: mvn checkstyle:checkstyle  # Generate Checkstyle report for the stage

      - name: Upload Checkstyle report for ${{ matrix.step }}
        if: ${{ matrix.step == 'verify' || matrix.step == 'compile' || matrix.step == 'test' || matrix.step == 'package' }}
        uses: actions/upload-artifact@v2
        with:
          name: checkstyle-report-${{ matrix.step }}
          path: target/checkstyle-result.xml  # Path to the Checkstyle XML report file

  security-scan:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Git Secrets scan
        uses: awslabs/git-secrets-action@v1
        with:
          git-secrets-path: '/usr/local/bin/git-secrets'  # Ensure git-secrets is installed
          git-secrets-action: 'scan'  # Run the security scan for sensitive data
